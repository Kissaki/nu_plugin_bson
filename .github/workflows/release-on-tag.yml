name: Release on Tag

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ""
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
          mkdir -p dist
          cp target/${{ matrix.target }}/release/nu_plugin_bson${{ matrix.ext }} dist/nu_plugin_bson-${{ matrix.target }}${{ matrix.ext }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nu_plugin_bson-${{ matrix.target }}
          path: dist/nu_plugin_bson-${{ matrix.target }}${{ matrix.ext }}

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: List files for debugging
        run: ls -R dist
      - name: Get tag version
        id: get_version
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          VERSION="${TAG_NAME#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      - name: Create GitHub Release with CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$TAG_NAME" dist/**/nu_plugin_bson-* \
            --title "$VERSION" \
            --notes "" \
            --verify-tag
